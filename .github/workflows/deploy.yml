name: Deploy API to AWS ECS

on:
  push:
    branches:
      - main

jobs:
  terraform:
    name: Provision Infrastructure with Terraform
    runs-on: ubuntu-latest

    steps:
      # 1. Fazer checkout do código
      - name: Checkout Code
        uses: actions/checkout@v3

      # 2. Configurar o AWS CLI
      - name: Configure AWS CLI
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      # 3. Instalar Terraform
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_wrapper: false

      # 4. Inicializar Terraform
      - name: Terraform Init
        run: terraform init
        working-directory: infra

      # 5. Planejar Infraestrutura
      - name: Terraform Plan
        run: terraform plan -out=tfplan
        working-directory: infra

      # 6. Aplicar Infraestrutura
      - name: Terraform Apply
        run: terraform apply -auto-approve tfplan
        working-directory: infra

  docker:
    name: Build and Deploy Docker Image
    runs-on: ubuntu-latest
    needs: terraform

    steps:
      # 1. Fazer checkout do código
      - name: Checkout Code
        uses: actions/checkout@v3

      # 2. Configurar o AWS CLI
      - name: Configure AWS CLI
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      # 3. Login no ECR
      - name: Login to Amazon ECR
        run: |
          aws ecr get-login-password --region ${{ secrets.AWS_REGION }} | docker login --username AWS --password-stdin ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com

      # 4. Build da imagem Docker
      - name: Build Docker Image
        run: |
          docker build -t ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/my-api-repository:latest .

      # 5. Push da imagem para o ECR
      - name: Push Docker Image to ECR
        run: |
          docker push ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/my-api-repository:latest

      # 6. Atualizar ECS Service
      - name: Update ECS Service
        run: |
          aws ecs update-service \
            --cluster my-ecs-cluster \
            --service my-api-service \
            --force-new-deployment